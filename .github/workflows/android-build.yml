name: Build Android APK/AAB

on:
  push:
    branches: [ main, master ]
    paths:
      - 'mobile/**'
      - '.github/workflows/android-build.yml'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'mobile/package-lock.json'

    - name: Install dependencies
      working-directory: ./mobile
      run: npm install --legacy-peer-deps

    - name: Decode Keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        echo "$KEYSTORE_BASE64" | base64 -d > mobile/android/app/pattern-discovery-release-key.keystore

    - name: Create gradle.properties with signing config
      working-directory: ./mobile/android
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      run: |
        cat >> gradle.properties << EOF
        MYAPP_UPLOAD_STORE_FILE=pattern-discovery-release-key.keystore
        MYAPP_UPLOAD_KEY_ALIAS=$KEY_ALIAS
        MYAPP_UPLOAD_STORE_PASSWORD=$KEYSTORE_PASSWORD
        MYAPP_UPLOAD_KEY_PASSWORD=$KEYSTORE_PASSWORD
        EOF

    - name: Make gradlew executable
      working-directory: ./mobile/android
      run: chmod +x gradlew

    - name: Build Release APK
      working-directory: ./mobile/android
      run: ./gradlew assembleRelease --no-daemon --stacktrace

    - name: Build Release AAB
      working-directory: ./mobile/android
      run: ./gradlew bundleRelease --no-daemon --stacktrace

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: pattern-discovery-release-apk
        path: mobile/android/app/build/outputs/apk/release/app-release.apk
        retention-days: 30

    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: pattern-discovery-release-aab
        path: mobile/android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 30

    - name: Get APK file size
      run: |
        APK_SIZE=$(du -h mobile/android/app/build/outputs/apk/release/app-release.apk | cut -f1)
        echo "APK Size: $APK_SIZE"
        echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV

    - name: Get AAB file size
      run: |
        AAB_SIZE=$(du -h mobile/android/app/build/outputs/bundle/release/app-release.aab | cut -f1)
        echo "AAB Size: $AAB_SIZE"
        echo "AAB_SIZE=$AAB_SIZE" >> $GITHUB_ENV

    - name: Comment build info on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const apkPath = 'mobile/android/app/build/outputs/apk/release/app-release.apk';
          const aabPath = 'mobile/android/app/build/outputs/bundle/release/app-release.aab';
          
          const apkExists = fs.existsSync(apkPath);
          const aabExists = fs.existsSync(aabPath);
          
          const message = `## ✅ Android Build Successful
          
          **APK:** ${apkExists ? '✅ Generated' : '❌ Not found'} (${process.env.APK_SIZE || 'Unknown'})
          **AAB:** ${aabExists ? '✅ Generated' : '❌ Not found'} (${process.env.AAB_SIZE || 'Unknown'})
          
          Download the artifacts from the Actions tab above.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });
